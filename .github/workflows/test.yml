name: Tests (Laravel + Inertia + MySQL)

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [main, dev]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: laravel
          MYSQL_PASSWORD: laravel
          MYSQL_ROOT_PASSWORD: root
        ports: ['3306:3306']
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    env:
      APP_ENV: testing
      APP_DEBUG: true
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: laravel_test
      DB_USERNAME: root
      DB_PASSWORD: root
      CACHE_DRIVER: file
      QUEUE_CONNECTION: sync
      SESSION_DRIVER: file
      MAIL_MAILER: log
      BROADCAST_DRIVER: log

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          coverage: pcov
          tools: composer:v2
          extensions: mbstring, intl, pdo_mysql, bcmath, pcntl, curl, dom, fileinfo, json, xml
          ini-values: post_max_size=256M, memory_limit=1G

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.18'
          cache: npm

      - name: Cache Composer
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache/files
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Install PHP deps
        run: composer install --no-interaction --no-progress --prefer-dist

      - name: Install Node deps
        run: |
          if [ -f package.json ]; then
            npm ci
          fi

      - name: Prepare .env & app key
        run: |
          cp .env.example .env
          {
            echo "APP_ENV=testing"
            echo "APP_KEY="
            echo "DB_CONNECTION=${DB_CONNECTION}"
            echo "DB_HOST=${DB_HOST}"
            echo "DB_PORT=${DB_PORT}"
            echo "DB_DATABASE=${DB_DATABASE}"
            echo "DB_USERNAME=${DB_USERNAME}"
            echo "DB_PASSWORD=${DB_PASSWORD}"
            echo "CACHE_DRIVER=${CACHE_DRIVER}"
            echo "QUEUE_CONNECTION=${QUEUE_CONNECTION}"
            echo "SESSION_DRIVER=${SESSION_DRIVER}"
            echo "MAIL_MAILER=${MAIL_MAILER}"
            echo "BROADCAST_DRIVER=${BROADCAST_DRIVER}"
          } >> .env
          php artisan key:generate

      - name: Migrate (with seed)
        run: php artisan migrate --seed --force

      - name: Build frontend (Vite)
        run: |
          if [ -f package.json ]; then
            npm run build
          fi

      - name: Run backend tests (Pest)
        run: |
          if [ -f vendor/bin/pest ]; then
            vendor/bin/pest --colors=always --coverage-clover=coverage.xml
          else
            vendor/bin/phpunit --colors=always --coverage-clover=coverage.xml
          fi

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-coverage
          path: coverage.xml
          if-no-files-found: ignore
